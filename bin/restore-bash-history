#!/usr/bin/env bash

set -o pipefail  # propagate errors
set -u  # exit on undefined
set -e  # exit on non-zero return value
#set -f  # disable globbing/filename expansion
shopt -s failglob  # error on unexpaned globs

source ~/Documents/scripts/source-me/common-functions.sh


tmp_dir="$(mktemp -d)"
tmp_bash_history_file="$tmp_dir/.bash_history"
[ -f "$HOME/.bash_history_x" ] && HISTFILE="$HOME/.bash_history_x" || HISTFILE="$HOME/.bash_history"
bash_history_file="$HISTFILE"
ls -lh "$bash_history_file"

cleanup () {
  set -x
  sleep 90
  rm -r "$tmp_dir"
  set +x
}

trap "set +x; (cleanup 1>/dev/null 2>&1 &)" EXIT  # keep file for x seconds

backup_dir=~/.bash_backup
largest_backup_file="$backup_dir/$(ls -S "$backup_dir" | head -n1 || die "${RED}[ERROR] no backup file.")"


set -x
ls -lh "$largest_backup_file"
set +x

current_bash_history_filesize="$(ls -al "$bash_history_file" | awk '{ print $5 }')"

if [ "$current_bash_history_filesize" -gt 1000 ]; then
  cp "$largest_backup_file" "$bash_history_file"
else
  cp "$largest_backup_file" "$tmp_bash_history_file"
  cat "$bash_history_file" >> "$tmp_bash_history_file"

  cp "$bash_history_file" "$bash_history_file".bck
  cp "$tmp_bash_history_file" "$bash_history_file"
fi

chmod 600 "$bash_history_file"
ls -lh "$bash_history_file"

