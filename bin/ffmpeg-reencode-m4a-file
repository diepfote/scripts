#!/usr/bin/env bash

# all of these stem from https://www.shellcheck.net/wiki/
set -o pipefail  # propagate errors
set -u  # exit on undefined
set -e  # exit on non-zero return value
#set -f  # disable globbing/filename expansion
shopt -s failglob  # error on unexpaned globs
shopt -s inherit_errexit  # Bash disables set -e in command substitution by default; reverse this behavior

# used in trap
exit_code=1

codec=aac

_help() {
cat <<EOF
USAGE: $(basename $0) [--threads NUM]  IN [OUT]

OPTIONS:
  -t|--threads NUM      Number of ffmpeg threads [default: num of physical cpus]
EOF
}


if [ "$(uname)" != Darwin ]; then
  NUM_THREADS="$(grep cores /proc/cpuinfo | head -n1 | awk 'NR==1 { print $4; exit }')"
else
  NUM_THREADS="$(sysctl -n hw.ncpu)"
fi
# Parse arguments
while [ $# -gt 0 ]; do
key="$1"
  case "$key" in
    -t|--threads)
    NUM_THREADS="$2"
    shift 2
    ;;

    -h|--help)
    _help
    exit 0
    ;;

    --)
    shift
    break
    ;;

    *)
    break
    ;;

  esac
done
echo "[.] using $NUM_THREADS threads."  >&2

if [ $# -gt 1 ]; then
  in="$1"
  OUT="$2"
  OUT_TEMPORARY=''
  shift 2
else
  in="$1"
  OUT=''
  OUT_TEMPORARY='true'
  shift
fi


tmpdir="$(mktemp -d)"
echo "[.] temp dir: $tmpdir"  >&2
cleanup () {
  set +x
  rm -r "$tmpdir"
  exit "$exit_code"
}
trap cleanup EXIT


if [ -z "$OUT" ]; then
  OUT="$tmpdir/$(basename "$in" | sed -r 's#(.*)\.[^\.]+$#\1.m4a#')"
  echo "[.] out file temporary: $OUT"  >&2
else
  out_dir="$(dirname "$(realpath "$OUT")")"
  if [ ! -d "$out_dir" ]; then
    out_dir="$(realpath "$PWD")"
  fi
  echo "[.] out explicitly set: ${out_dir}/$(basename "$OUT")"  >&2
fi

if ffmpeg -threads "$NUM_THREADS"  -i "$in" -c:a "$codec"   "$@" "$OUT"   >"$tmpdir/stdout" 2>"$tmpdir/stderr"; then
  echo "[.] $in: success"  >&2
  exit_code=0
else
  echo "[!] $in: failure"  >&2
  exit "$exit_code"
fi

if [ -n "$OUT_TEMPORARY" ]; then
  set -x
  mv "$OUT" "$in"
  set +x
fi

