#!/usr/bin/env bash

# all of these stem from https://www.shellcheck.net/wiki/
set -o pipefail  # propagate errors
set -u  # exit on undefined
set -e  # exit on non-zero return value
#set -f  # disable globbing/filename expansion
shopt -s failglob  # error on unexpaned globs
shopt -s inherit_errexit  # Bash disables set -e in command substitution by default; reverse this behavior


# set -x
# cleanup () { set +x; }
# trap cleanup EXIT


if [ "$(uname)" = Darwin ]; then
  COMMAND=(/opt/homebrew/bin/git)
elif [ "$(uname)" = Linux ]; then
  COMMAND=(/usr/bin/git)
else
  COMMAND=(echo Unsupported OS)
fi

BASE="$("${COMMAND[@]}" rev-parse --show-toplevel 2>/dev/null || true)"

commit () {

  if [[ "$BASE" =~ deploy-.* ]]; then
    saved_opts=()
    message=''
    while [ $# -gt 0 ]; do
    key="$1"
      case "$key" in
        -m)
        message="$2"
        shift 2
        # nothing else needs to be modified
        # leave the rest as it is
        break
        ;;

        --)
        shift
        break
        ;;

        *)
        # match only required if `-m` is not the first opt
        saved_opts+=("$1")
        shift
        ;;

      esac
    done

    prefix="[$(awk -F '/' '{ print $3 }' "$BASE"/.git/HEAD)] "

    "${COMMAND[@]}" commit -m "$prefix$message" "${saved_opts[@]}" "$@"
  else

    "${COMMAND[@]}" commit "$@"
  fi
}

push () {
  # additional command to run
  if git-remote-gcrypt --check "$(grep url "$BASE"/.git/config |\
       awk '{ print $3 }' |\
       head -n1 |\
       sed 's#^.*gcrypt::## ; s/#.*"$//')" >/dev/null 2>&1; then
    # shellcheck disable=SC2016
    echo '[.] running pull for `git-remote-gcrypt` repo before push' >&2
    "${COMMAND[@]}" pull "$@"
    echo '[.] --' >&2
  fi

  "${COMMAND[@]}" push "$@"
}



COMMIT=''
PUSH=''
while [ $# -gt 0 ]; do
key="$1"
  case "$key" in
    commit)
    COMMIT=true
    shift
    ;;

    push)
    PUSH=true
    shift
    ;;

    --)
    shift
    break
    ;;

    *)
    break
    ;;

  esac
done


if [ -n "$PUSH" ]; then
  push "$@"

elif [ -n "$COMMIT" ]; then

  commit "$@"

else

  "${COMMAND[@]}" "$@"
fi

