#!/usr/bin/env bash

# all of these stem from https://www.shellcheck.net/wiki/
set -o pipefail  # propagate errors
set -u  # exit on undefined
set -e  # exit on non-zero return value
#set -f  # disable globbing/filename expansion
shopt -s failglob  # error on unexpaned globs
shopt -s inherit_errexit  # Bash disables set -e in command substitution by default; reverse this behavior

if [ "$(uname)" = Darwin ]; then
  command=(/opt/homebrew/bin/git)
elif [ "$(uname)" = Linux ]; then
  command=(/usr/bin/git)
else
  command=(echo Unsupported OS)
fi

BASE="$("${command[@]}" rev-parse --show-toplevel 2>/dev/null || true)"

if [ "$1" = push ]; then
  if git-remote-gcrypt --check "$(grep url "$BASE"/.git/config |\
       awk '{ print $3 }' |\
       head -n1 |\
       sed 's#^.*gcrypt::## ; s/#.*"$//')" >/dev/null 2>&1; then
    # shellcheck disable=SC2016
    echo '[.] running pull for `git-remote-gcrypt` repo before push' >&2
    "${command[@]}" pull
    echo '[.] --' >&2
  fi
fi

"${command[@]}" "$@"
