#!/usr/bin/env bash

set -o pipefail  # propagate errors
set -u  # exit on undefined
set -e  # exit on non-zero return value
#set -f  # disable globbing/filename expansion
shopt -s failglob  # error on unexpaned globs

# shellcheck disable=SC1090
source ~/Documents/scripts/source-me/common-functions.sh


trap cleanup EXIT
cleanup () {
  set +x
}


# Parse arguments
PASS_TO_OS_INDEPENDENT=()
while [ $# -gt 0 ]; do
key="$1"
  case "$key" in
    --skip-rust-cargo)
    PASS_TO_OS_INDEPENDENT+=("$key")
    shift
    ;;

    --skip-vim-updates)
    PASS_TO_OS_INDEPENDENT+=("$key")
    shift
    ;;

    --)
    shift
    break
    ;;

    *)
    break
    ;;

  esac
done


system="$(uname)"

if [ "$system" = Linux ]; then
  if [ $# -lt 1 ]; then
    echo 'Do you want to do pkg downloads only?'
    set +u
    if yesno; then
      set -- -w
    fi
    set -u
  fi

  # check arguments
  set +e
  if yay-all --dry-run "$@" 2>&1 | head -n1 | grep -- 'invalid option' >/dev/null; then
    # shellcheck disable=SC2154
    echo -e "[!] ${RED}invalid flags $NC"'`'"$*"'`' >&2
    exit 1
  fi
  set -e

  # TODO maybe we want this on Mac OS as well
  #
  # On Arch we use `Rustup` instead of `Native Installation`
  # https://wiki.archlinux.org/title/Rust#Installation
  echo ------------------ >&2
  echo "[>] updating rust" >&2
  rustup update stable
  echo ------------------ >&2

  _os-independent-updates "${PASS_TO_OS_INDEPENDENT[@]}"

  set -x
  yay-all "$@"
  set +x

elif [ "$system" = Darwin ]; then
  if [ $# -lt 1 ]; then
    echo 'Do you want to run greedy updates?'
    set +u
    if yesno; then
      set -- -g
    fi
    set -u
  fi
  # check arguments
  w-pkg-update --dry-run "$@"

  _os-independent-updates "${PASS_TO_OS_INDEPENDENT[@]}"

  set -x
  w-pkg-update "$@"
  set +x
fi

