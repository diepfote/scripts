#!/usr/bin/env bash

# all of these stem from https://www.shellcheck.net/wiki/
set -o pipefail  # propagate errors
set -u  # exit on undefined
set -e  # exit on non-zero return value
#set -f  # disable globbing/filename expansion
shopt -s failglob  # error on unexpaned globs
shopt -s inherit_errexit  # Bash disables set -e in command substitution by default; reverse this behavior

# used in trap
exit_code=1

in="$1"
out_unset=""
shift
if [ $# -lt 2 ]; then
  tmpdir="$(mktemp -d)"
  echo "[.] using $tmpdir for $(basename "$in")"  >&2
  cleanup () {
    rm -r "$tmpdir"
    exit "$exit_code"
  }
  trap cleanup EXIT

  out="$tmpdir/$(basename "$in")"
  out_unset="true"
else
  out="$2"
  shift
fi

# set to val of third arg or `45`
min_db_level="${3:-45}"

codec=(-c:a aac)

if ffmpeg -i "$in" "${codec[@]}" -filter_complex "compand=attacks=0:points=-$min_db_level/-900|-$(( min_db_level - 5 ))/-10|-5/-10|0/-10:gain=3" "$out" "$@"  >"$tmpdir"/stdout 2>"$tmpdir"/stderr; then
  echo "[.] $in: success"  >&2
  exit_code=0
else
  echo "[!] $in: failure"  >&2
  exit "$exit_code"
fi

if [ -n "$out_unset" ]; then
  mv "$out" "$in"
fi
