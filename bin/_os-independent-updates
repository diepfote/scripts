#!/usr/bin/env bash

set -o pipefail  # propagate errors
set -u  # exit on undefined
set -e  # exit on non-zero return value
#set -f  # disable globbing/filename expansion
shopt -s failglob  # error on unexpaned globs


cleanup () {
  set +x
}
trap cleanup EXIT


echo
echo ------------------
echo "[>] updating vim plugins and vim plug itself"
set -x

plugin_update_log=/tmp/nvim-plugin-update.log

echo > "$plugin_update_log"
echo '[.] PlugUpdate' >> "$plugin_update_log"
nvim -c "Bufferize PlugUpdate | :w >> $plugin_update_log | qa"

echo '--' >> "$plugin_update_log"
echo '[.] PlugUpgrade' >> "$plugin_update_log"
nvim -c "Bufferize PlugUpgrade | :w >> $plugin_update_log | qa"

echo '--' >> "$plugin_update_log"
echo '[.] CocUpdateSync' >> "$plugin_update_log"
nvim -c "Bufferize CocUpdateSync | :w >> $plugin_update_log | qa"

echo '--' >> "$plugin_update_log"
echo '[.] GoUpdateBinaries' >> "$plugin_update_log"
nvim -c "redir >>$plugin_update_log | execute ':GoUpdateBinaries' | qa"

cat "$plugin_update_log"
echo

set +x

echo
pushd ~/.vim/plugged/coc.nvim || exit 1
yarn install
popd

echo
echo ------------------
echo "[>] updating tmux plugins"

git_execute_on_all_repos -c <(find ~/.tmux/plugins/  -maxdepth 1 -mindepth 1 -type d) -- git pull
tmux source ~/.tmux.conf

echo -e '\n--------\nrust cargo\n'
# cargo install cargo-update
# https://crates.io/crates/cargo-update
cargo install-update -a
echo

