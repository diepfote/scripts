#!/usr/bin/env bash

set -o pipefail  # propagate errors
set -u  # exit on undefined
set -e  # exit on non-zero return value
#set -f  # disable globbing/filename expansion
shopt -s failglob  # error on unexpaned globs

log () {
  echo "$@" >&2
}

cleanup () {
  set +x
}
trap cleanup EXIT


SKIP_VIM_UPDATES=''
SKIP_RUST_CARGO=''
while [ $# -gt 0 ]; do
key="$1"
  case "$key" in
    --skip-rust-cargo)
    SKIP_RUST_CARGO=true
    shift
    ;;

    --skip-vim-updates)
    SKIP_VIM_UPDATES=true
    shift
    ;;

    --)
    shift
    break
    ;;

    *)
    break
    ;;

  esac
done


if [ -z "$SKIP_VIM_UPDATES" ]; then
  log
  log -e ------------------
  log -e "[>] updating vim plugins and vim plug itself"
  set -x

  plugin_update_log=/tmp/nvim-plugin-update.log

  echo > "$plugin_update_log"
  echo '[.] PlugUpdate' >> "$plugin_update_log"
  nvim -c "Bufferize PlugUpdate | :w >> $plugin_update_log | qa"

  echo '--' >> "$plugin_update_log"
  echo '[.] PlugUpgrade' >> "$plugin_update_log"
  nvim -c "Bufferize PlugUpgrade | :w >> $plugin_update_log | qa"

  echo '--' >> "$plugin_update_log"
  echo '[.] CocUpdateSync' >> "$plugin_update_log"
  nvim -c "Bufferize CocUpdateSync | :w >> $plugin_update_log | qa"

  echo '--' >> "$plugin_update_log"
  echo '[.] GoUpdateBinaries' >> "$plugin_update_log"
  nvim -c "redir >>$plugin_update_log | execute ':GoUpdateBinaries' | qa"

  grep -vE 'Reinstalling|Already up to date' "$plugin_update_log" >&2
  log

  set +x

  log
  pushd ~/.vim/plugged/coc.nvim || exit 1
  yarn install
  popd
else
  log -e '\n--------\n[...] skipping vim updates\n'
fi

log
log -e ------------------
log -e "[>] updating tmux plugins"

~/Repos/golang/tools/execute-in-repos/execute-in-repos -config <(find ~/.tmux/plugins/  -maxdepth 1 -mindepth 1 -type d) -- git pull
tmux source ~/.tmux.conf

  # https://wiki.archlinux.org/title/Rust#Installation
  log -e ------------------ >&2
  log -e "[>] updating rust" >&2
  rustup update stable
  rustup component add rust-analyzer
  log -e ------------------ >&2

if [ -z "$SKIP_RUST_CARGO" ]; then
  log -e '\n--------\n[>] rust cargo\n'
  # cargo install cargo-update
  # https://crates.io/crates/cargo-update
  set +e
  set -x
  cargo install-update -a
  set +x
  set -e
  log
else
  log -e '\n--------\n[...] skipping rust cargo\n'
fi
